error[E0308]: mismatched types
  --> $DIR/bad-return-type.rs:14:8
   |
14 |     Ok(val)
   |        ^^^
   |        |
   |        expected enum `std::option::Option`, found integral variable
   |        help: try using a variant of the expected type: `futures::__rt::Some(val)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> $DIR/bad-return-type.rs:17:36
   |
17 |    #[async_stream(item = Option<i32>)]
   |   ____________________________________^
   |  |____________________________________|
   | ||
18 | || fn foobars() -> Result<(), ()> {
19 | ||     let val = Some(42);
20 | ||     if val.is_none() {
...  ||
24 | ||     let val = val.unwrap();
25 | ||     stream_yield!(val);
   | ||    ^
   | ||____|
   | |_____expected enum `std::option::Option`, found integral variable
   |       help: try using a variant of the expected type: `futures::__rt::Some(e)`
   |
   = note: expected type `std::option::Option<_>`
              found type `{integer}`
   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> $DIR/bad-return-type.rs:32:19
   |
32 |         return Ok(3);
   |                   ^ expected tuple, found integral variable
   |
   = note: expected type `(i32, i32)`
              found type `{integer}`

error: aborting due to 3 previous errors

